class Solution {
public:
    bool solve(int row, int col, int ind, string word, vector<vector<char>>&board, int n, int m, vector<vector<int>>&vis){
        if(ind==word.length()-1){
            return true;
        }

        vis[row][col]=1;
        vector<int>rowAdd={-1,1,0,0};
        vector<int>colAdd={0,0,-1,1};
        for(int i=0;i<4;i++){
            int nrow=row+rowAdd[i], ncol=col+colAdd[i];
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && !vis[nrow][ncol] && word[ind+1]==board[nrow][ncol]){
                if(solve(nrow, ncol, ind+1, word, board, n, m, vis)){
                    return true;
                }
            }
        }
        vis[row][col]=0;
        return false;
    }

    bool exist(vector<vector<char>>& board, string word) {
        int n=board.size(), m=board[0].size();
        vector<vector<int>>vis(n, vector<int>(m,0));

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]==word[0]){
                    if(solve(i, j, 0, word, board, n, m, vis)){
                        return true;
                    }
                }
            }
        }
        return false;
        
    }
};
